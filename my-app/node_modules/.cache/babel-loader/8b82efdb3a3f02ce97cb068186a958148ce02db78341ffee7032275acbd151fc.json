{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api',\n  withCredentials: true\n});\n\n// Add a request interceptor to include the token\napi.interceptors.request.use(config => {\n  const token = sessionStorage.getItem('token');\n  config.headers.Authorization = `Bearer ${token}`;\n  return config;\n}, error => Promise.reject(error));\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","withCredentials","interceptors","request","use","config","token","sessionStorage","getItem","headers","Authorization","error","Promise","reject"],"sources":["C:/Users/e040420/Desktop/CustomerSupportAPI/CustomerTicketingServiceUpdated/my-app/src/apiForManager.js"],"sourcesContent":["import axios from 'axios';\r\n \r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:5000/api',\r\n  withCredentials: true,\r\n});\r\n \r\n// Add a request interceptor to include the token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = sessionStorage.getItem('token');\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n   \r\n \r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n \r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B;EACpCC,eAAe,EAAE;AACnB,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;EAC7CH,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAGhD,OAAOD,MAAM;AACf,CAAC,EACAM,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;AAED,eAAeb,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}