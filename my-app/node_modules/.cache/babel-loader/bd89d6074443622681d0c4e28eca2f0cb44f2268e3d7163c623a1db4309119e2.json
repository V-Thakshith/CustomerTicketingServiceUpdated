{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\e040420\\\\Desktop\\\\CustomerSupportAPI\\\\CustomerTicketingServiceUpdated\\\\my-app\\\\src\\\\components\\\\EmployeeLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './EmployeeLogin.css';\nimport { UserContext } from '../UserContext'; // Import your user context\nimport api from '../api'; // Assuming you have an api instance configured\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeLogin = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isManager, setIsManager] = useState(false); // Checkbox state for manager login\n  const {\n    setUser\n  } = useContext(UserContext); // Use context to manage user\n  const navigate = useNavigate();\n  const validateEmail = email => /\\S+@\\S+\\.\\S+/.test(email);\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      // Validate email format\n      if (!validateEmail(email)) {\n        alert('Please enter a valid email address.');\n        return;\n      }\n\n      // Call the API for login\n      const {\n        data\n      } = await api.post('/auth/login', {\n        email,\n        password\n      });\n\n      // Log the user data and token\n      console.log(data.user, data.token);\n      sessionStorage.setItem('token', data.token); // Store the token\n      setUser(data.user); // Update user context\n\n      // Navigate based on role\n      if (isManager && data.user.role === 'manager') {\n        navigate('/managerDashboard');\n      } else if (!isManager && data.user.role === 'agent') {\n        navigate('/dashboardAgent');\n      } else if (!isManager && data.user.role === 'customer') {\n        navigate('/dashboard');\n      } else {\n        alert(\"Auth Login Error: Incorrect role or credentials.\");\n      }\n    } catch (error) {\n      console.log(error);\n      alert(\"Login Failed. Please check your credentials.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"employee-login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Employee Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group-inline\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"managerLogin\",\n          checked: isManager,\n          onChange: () => setIsManager(!isManager)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"managerLogin\",\n          children: \"Sign in as Manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-button\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 13\n  }, this);\n};\n_s(EmployeeLogin, \"5pH56jzrF8OTHzbnXbXgrTtHexU=\", false, function () {\n  return [useNavigate];\n});\n_c = EmployeeLogin;\nexport default EmployeeLogin;\nvar _c;\n$RefreshReg$(_c, \"EmployeeLogin\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","UserContext","api","jsxDEV","_jsxDEV","EmployeeLogin","_s","email","setEmail","password","setPassword","isManager","setIsManager","setUser","navigate","validateEmail","test","handleLogin","e","preventDefault","alert","data","post","console","log","user","token","sessionStorage","setItem","role","error","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","target","required","checked","_c","$RefreshReg$"],"sources":["C:/Users/e040420/Desktop/CustomerSupportAPI/CustomerTicketingServiceUpdated/my-app/src/components/EmployeeLogin.js"],"sourcesContent":["    import React, { useState, useContext } from 'react';\r\n    import { useNavigate } from 'react-router-dom';\r\n    import './EmployeeLogin.css';\r\n    import { UserContext } from '../UserContext'; // Import your user context\r\n    import api from '../api'; // Assuming you have an api instance configured\r\n\r\n    const EmployeeLogin = () => {\r\n        const [email, setEmail] = useState('');\r\n        const [password, setPassword] = useState('');\r\n        const [isManager, setIsManager] = useState(false); // Checkbox state for manager login\r\n        const { setUser } = useContext(UserContext); // Use context to manage user\r\n        const navigate = useNavigate();\r\n\r\n        const validateEmail = (email) => /\\S+@\\S+\\.\\S+/.test(email);\r\n\r\n        const handleLogin = async (e) => {\r\n            e.preventDefault();\r\n            try {\r\n                // Validate email format\r\n                if (!validateEmail(email)) {\r\n                    alert('Please enter a valid email address.');\r\n                    return;\r\n                }\r\n\r\n                // Call the API for login\r\n                const { data } = await api.post('/auth/login', { email, password });\r\n\r\n                // Log the user data and token\r\n                console.log(data.user, data.token);\r\n                sessionStorage.setItem('token', data.token); // Store the token\r\n                setUser(data.user); // Update user context\r\n\r\n                // Navigate based on role\r\n                if (isManager && data.user.role === 'manager') {\r\n                    navigate('/managerDashboard');\r\n                } else if (!isManager && data.user.role === 'agent') {\r\n                    navigate('/dashboardAgent');\r\n                } else if (!isManager && data.user.role === 'customer') {\r\n                    navigate('/dashboard');\r\n                } else {\r\n                    alert(\"Auth Login Error: Incorrect role or credentials.\");\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n                alert(\"Login Failed. Please check your credentials.\");\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div className=\"employee-login-container\">\r\n                <form className=\"login-form\" onSubmit={handleLogin}>\r\n                    <h2>Employee Login</h2>\r\n\r\n                    <div className=\"input-group\">\r\n                        <label htmlFor=\"email\">Email Address</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-group-inline\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            id=\"managerLogin\"\r\n                            checked={isManager}\r\n                            onChange={() => setIsManager(!isManager)}\r\n                        />\r\n                        <label htmlFor=\"managerLogin\">Sign in as Manager</label>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"login-button\">Login</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    export default EmployeeLogin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}